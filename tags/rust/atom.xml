<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title> - rust</title>
    <link rel="self" type="application/atom+xml" href="https://zuiyu1998.github.io/tags/rust/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://zuiyu1998.github.io/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-07-31T00:00:00+00:00</updated>
    <id>https://zuiyu1998.github.io/tags/rust/atom.xml</id>
    <entry xml:lang="en">
        <title>从零开始渲染器-Pass</title>
        <published>2025-07-31T00:00:00+00:00</published>
        <updated>2025-07-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://zuiyu1998.github.io/renderer-01/"/>
        <id>https://zuiyu1998.github.io/renderer-01/</id>
        
        <summary type="html">&lt;p&gt;从零开始渲染器.论 Pass 的设计。&lt;&#x2F;p&gt;</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>从零开始渲染器-TransientResource</title>
        <published>2025-07-31T00:00:00+00:00</published>
        <updated>2025-07-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://zuiyu1998.github.io/renderer-02/"/>
        <id>https://zuiyu1998.github.io/renderer-02/</id>
        
        <summary type="html">&lt;p&gt;从零开始渲染器.论 TransientResource。&lt;&#x2F;p&gt;</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>从零开始渲染器</title>
        <published>2025-07-30T00:00:00+00:00</published>
        <updated>2025-07-30T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://zuiyu1998.github.io/renderer/"/>
        <id>https://zuiyu1998.github.io/renderer/</id>
        
        <summary type="html">&lt;p&gt;从零开始渲染器.&lt;&#x2F;p&gt;</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>pre-commit 的使用</title>
        <published>2025-05-24T00:00:00+00:00</published>
        <updated>2025-05-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://zuiyu1998.github.io/pre-commit-use/"/>
        <id>https://zuiyu1998.github.io/pre-commit-use/</id>
        
        <summary type="html">&lt;p&gt;pre-commit 是一个使用 git hook 来实现代码规范的工具。通过这个工具可以使代码结构更规整，更有可读性。&lt;&#x2F;p&gt;</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>切片和原数组的长度关系</title>
        <published>2025-03-05T00:00:00+00:00</published>
        <updated>2025-03-05T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://zuiyu1998.github.io/q-a-2/"/>
        <id>https://zuiyu1998.github.io/q-a-2/</id>
        
        <summary type="html">&lt;p&gt;场景：&lt;&#x2F;p&gt;
&lt;p&gt;一个数组的切片长度和原数组的长度关系是什么样的？&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;两者一样&lt;&#x2F;li&gt;
&lt;li&gt;各自维护自己的长度信息&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>在多线程中有高计算场景中如何持有锁</title>
        <published>2025-02-24T00:00:00+00:00</published>
        <updated>2025-02-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://zuiyu1998.github.io/q-a-1/"/>
        <id>https://zuiyu1998.github.io/q-a-1/</id>
        
        <summary type="html">&lt;p&gt;场景：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;多线程使用&lt;&#x2F;li&gt;
&lt;li&gt;有一个或多个线程有高计算使用&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;在这种情况下如何使用锁？&lt;&#x2F;p&gt;</summary>
        
    </entry>
</feed>
